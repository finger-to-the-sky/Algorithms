# Практическое задание №1
# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа. Числа и знак операции вводятся пользователем.
# После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для вычислений.
# Завершение программы должно выполняться при вводе символа '0' в качестве знака операции. Если пользователь вводит неверный знак
# (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и снова запрашивать знак операции.
# Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.


def calc():
    do = str
    while do != '0':
        try:
            num_1 = int(input('Введите первое число: '))
            do = input("Выберите действие: ") # разместим запрос здесь, чтобы операция была более наглядной в консоли
            if do == '0':
                print('Ok')
                break
            num_2 = int(input('Введите второе число: '))
        except ValueError:
            print("Вы можете работать только с числами!")
            calc()

        try:
            if do == '+':
                result = num_1 + num_2
                print(result)
            elif do == '-':
                result = num_1 - num_2
                print(result)
            elif do == '/':
               result = num_1 / num_2
               print(result)
            elif do == '*':
                result = num_1 * num_2
                print(result)

            else:
                print("Введен неверный оператор")
        except ZeroDivisionError:
            print('Вы не можете делить на ноль!')
            calc()
calc()




# Практическое задание № 2
# 2. Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560,
# то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).


def numbers():
    try:
        number = int(input('Введите натуральное число: '))
        ls = []
        ls_2 = []
        for i in str(number):
            if i == '2' or i == '4' or i == '6' or i == '8':
                ls.append(i)

            else:
                ls_2.append(i)
        print(f'Четные числа: {len(ls)}\nНечетные числа: {len(ls_2)}')
    except ValueError:
        print('Вы можете вводить только числа!')
        numbers()

numbers()


# Практическое задание № 3
# 3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, то надо вывести число 6843.

number = int(input("Введите целое число: "))
number_2 = 0


while number > 0:
    result = number % 10
    number = number // 10
    number_2 = number_2 * 10
    number_2 = number_2 + result

print(number_2)



# Практическое задание № 4
# 4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...Количество элементов (n) вводится с клавиатуры.


n = int(input("Введите количество делений: "))
result = 1
result_1 = 0
while n != 0:
    result = result / 2
    result_1 = result_1 + result
    n = n - 1
print(result_1)





# Практическое задание № 5
# 5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.

row = ''
table = ''
for char in range(32, 128):
    row += f'{char}: {chr(char)}\t'
    if not (char - 31) % 10:
        table += f'{row}\n'
        row = ''
table += f'{row}\n'
print(table)




# Практическое задание № 6
# В программе генерируется случайное целое число от 0 до 100. Пользователь должен его отгадать не более чем за 10 попыток.
# После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число, чем то, что загадано.
# Если за 10 попыток число не отгадано, то вывести загаданное число.


from random import randint


def guess_int():
    number = randint(1, 100)
    # print(number) Уберите комменарий для проверки совпадения угаданного числа
    count = 10

    print('Я загадал число от 1 до 100, попробуй отгадать))')
    while count != 0:
        try:
            user_num = int(input('Твое число: '))
        except ValueError:
            print("Введите число, а не строку!")
            guess_int()


        if user_num > number:
            print('Твое число больше загаданного')
        elif user_num < number:
            print("Твое число меньше загаданного")

        elif user_num == number:
            print('Ты отгадал!!!')
            user_mes()
            break

        else:
            print("Введенны неверные значения")
        count = count - 1
        print(f'Кол-во попыток: {count}')


        def user_mes():
            user_message = input("Попробовать еще раз? (+ или -): ")
            if user_message == '+':
                return guess_int()
            elif user_message == '-':
                print('До встречи, мой друг!')
            else:
                print('Введена неверная команда. Нужно ответить либо + (да) либо - (нет)')
                return user_mes()

        if count == 0:
            print('Ты проиграл:c')
            user_mes()

guess_int()



# Практическое задание № 7
# 7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство:
# 1+2+...+n = n(n+1)/2, где n - любое натуральное число.

def check_nature_numbers():
    try:
        num_1 = int(input("Введите первое число: "))
        num_2 = int(input("Введите последнее число: "))
    except ValueError:
        print("Необходимо вводить только числа!")
        check_nature_numbers()

    i = 0

    for k in range(num_1, num_2+1):
        i+=k
    check = (num_2*(num_2+1))/2

    if i == check:
        print(f"Равенство выполнено: {i} = {check}")
    else:
        print('Равенство не выполнено')

check_nature_numbers()

# Практическое задание № 8
# 8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел. Количество вводимых
# чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.

def meet():
    try:
        numbers = int(input("Введите последовательность чисел: "))
        number = int(input("Введите число: "))
        count = ''
        for i in str(numbers):
            if i == str(number):
                count = count + i
        print(len(count))
    except ValueError:
        print('Вы должны вводить только числа!')
        meet()

meet()

# Практическое задание № 9
# 9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр. Вывести на экран это число и сумму
# его цифр.


n = int(input('Если вы хотите остановить запись, введите 0.\nВведите число: '))
summa = 0
max_num = 0
while n != 0:
    m = n
    sum = 0
    while n > 0:
        sum += n % 10
        n //= 10
    if sum > summa:
        summa = sum
        max_num = m
    n = int(input('Введите число: '))
print(f'Число: {max_num} имеет максимальную сумму цифр: {summa}')

