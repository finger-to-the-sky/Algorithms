# Практическое задание № 1:
# Найти сумму и произведение цифр трехзначного числа, которое вводит пользователь


first_num = int(input("Введите первое трехзначное число: "))
second_num = int(input("Введите второе трехзначное число: "))

summ = first_num + second_num
prod = first_num * second_num

print(f'Сумма ваших чисел равна: {summ}\nПроизведение ваших чисел равно: {prod}')



# Практическое задание № 2
# 2. Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6.
# Выполнить над числом 5 побитовый сдвиг вправо и влево на два знака. Объяснить полученный результат.

bit_and = 5 & 6
bit_or = 5 | 6
bit_xor = 5 ^ 6

print(f'Выполним логические побитовые операции над числами 5 и 6:\n'
      f'В бинарном виде 5 = {bin(5)}, 6 = {bin(6)}\n'
      f'5 & 6 = {bit_and}   {bin(bit_and)}\n'
      f'5 | 6 = {bit_or}   {bin(bit_or)}\n'
      f'5 ^ 6 = {bit_xor}   {bin(bit_xor)}')



# Практическое задание № 3
# По введенным пользователем координатам двух точек вывести
# уравнение прямой, проходящей через эти точки.


x1 = float(input('Введите координаты 2х точек: \nx1 = '))
y1 = float(input('y1 = '))
x2 = float(input('x2 = '))
y2 = float(input('y2 = '))

a = y1 - y2
b = x2 - x1
c = x1 * y2 - x2 * y1
if a == 0 and b == 0:
    print('Точки совпадают')
elif a == 0:
    print(f'Уравнение прямой:\n'
          f'{b}y + {c} = 0')
elif b == 0:
    print(f'Уравнение прямой:\n'
          f'{a}x + {c} = 0')
else:
    print(f'Уравнение прямой:\n'
          f'{a}x + {b}y + {c} = 0')



# Практическое задание № 4:
# Написать программу, которая генерирует в указанных пользователем границах:
# случайное целое число;
# случайное вещественное число;
# случайный символ.

# Для каждого из трех случаев пользователь задает свои границы диапазона. Например, если надо получить случайный символ
# от 'a' до 'f', то вводятся эти символы.
# Программа должна вывести на экран любой символ алфавита от 'a' до 'f' включительно.

# Так как у нас написано в задании написать ПРОГРАММУ сделаем каждый ее компонент отдельной функцией. Так будет проще в будущем вносить правки.
import random
def rand_int(first, second):
    result_int = random.randint(first, second)
    print(result_int)
    return result_int

def rand_float(first, second):
    result_float = random.uniform(first, second)
    print(round(result_float, 2))
    return result_float

def rand_letter(first, second):
    result_let = chr(random.randint(ord(first), ord(second)))
    print(result_let)
    return result_let


# Далее делаем обработку ошибок сообщая пользователю о корректности введенных данных.
try:

    # Далее запрашиваем у пользователя какую функцию он хочет запустить
    user_want = input('Диапазон какого типа данных вы хотите вычислить?\nЧисло, Вещественное число или Символ? ')

    # Исправляем ошибку регистра
    if user_want == 'Число' or user_want == 'число':
        rand_int(int(input('Запущенна функция случайного числа. Введите диапазон\nОт числа: ')), int(input('До числа: ')))

    elif user_want == 'Вещественное число' or user_want == 'вещественное число':
        rand_float(float(input('Запущенна функция случайного вещественного числа. Введите диапазон\nОт числа: ')), float(input('До числа: ')))

    elif user_want == 'Символ' or user_want == 'символ':
        rand_letter(input('Запущенна функция случайного символа. Введите диапазон\nОт буквы: '), input('До буквы: '))
    else:
        print('Неверный тип данных')

except Exception:
    print('Функции генерации работают только в порядке наростания!!!\nПожалуйста введите коректно данные')




# Практическое задание №5
# Пользователь вводит две буквы. Определить, на каких местах алфавита они стоят и сколько между ними находится букв.

# Так как в заданий нам запрещенно использовать циклы и списки, храним алфавит в следующей структуре.
# Алфавит будет английской раскладки, так как в задании она не указана (хотя можно сделать и русскую но зачем столько всего)

alphabet = '0ABCDEFGHIJKLMNOPQRSTUVWXYZ'         # добавляем 0 для назначения начала алфавита с 1 индекса

def find_num():
    one = input('Введите первую букву: ')
    two = input('Введите вторую букву: ')

    # Проверяем на регистр первую и вторую букву и находим индекcы
    if one in alphabet is True \
            and two in alphabet is True:
        first = alphabet.find(one)
        second = alphabet.find(two)
    else:
        one = one.upper()  # Иначе приравнием к верхнему регистру
        two = two.upper()
        first = alphabet.find(one)
        second = alphabet.find(two)

    # Теперь вычисляем кол-во букв между ними
    if first < second:
        result = second - first
    else:
        result = first - second
    # в result отнимаем 1 для правильного отображения количества именно между буквами
    print(f'Место первой буквы: {first}\nМесто второй буквы: {second}\nКоличество букв между ними: {result - 1}')

find_num()

# Практическое задание № 6:
# Пользователь вводит номер буквы в алфавите. Определить, какая это буква.

def find_let():
    let = int(input('Введите номер буквы: '))
    print(f'Ваша буква: {alphabet[let]}')

find_let()




# Практическое задание № 7
# По длинам трех отрезков, введенных пользователем, определить возможность существования треугольника,
# составленного из этих отрезков.
# Если такой треугольник существует, то определить, является ли он разносторонним, равнобедренным или равносторонним.


a = float(input('Введите длины трех отрезков:\na = '))
b = float(input('b = '))
c = float(input('c = '))

if a + b >= c and a + c >= b and b + c >= a:
    if a == b or b == c or c == a:
        if a == b and a == c:
            print('Треугольник равносторонний')
        else:
            print('Треугольник равнобедренный')
    else:
        print('Треугольник разносторонний')
else:
    print('Это не треугольник')





# Практическое задание № 8:
# Определить, является ли год, который ввел пользователем, високосным или невисокосным.

year = int(input('Введите год: '))

if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
    print('Год высокосный!')
else:
    print('Год не высокосный!')

#
# Практическое задание № 9:
#
# Вводятся три разных числа. Найти, какое из них является средним (больше одного, но меньше другого).

a = int(input('Введите первое число: '))
b = int(input('Введите второе число: '))
c = int(input('Введите третье число: '))


if a < b and a > c or a > b and a < c:
    print(f'Среднее число: {a}')
elif b < a and b > c or b > a and b < c:
    print(f'Среднее число: {b}')
elif c < a and c > b or c > a and c < b:
    print(f'Среднее число: {c}')

